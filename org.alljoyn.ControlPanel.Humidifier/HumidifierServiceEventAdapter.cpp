//-----------------------------------------------------------------------------
// <auto-generated> 
//   This code was generated by a tool. 
// 
//   Changes to this file may cause incorrect behavior and will be lost if  
//   the code is regenerated.
//
//   Tool: AllJoynCodeGenerator.exe
//
//   This tool is located in the Windows 10 SDK and the Windows 10 AllJoyn 
//   Visual Studio Extension in the Visual Studio Gallery.  
//
//   The generated code should be packaged in a Windows 10 C++/CX Runtime  
//   Component which can be consumed in any UWP-supported language using 
//   APIs that are available in Windows.Devices.AllJoyn.
//
//   Using AllJoynCodeGenerator - Invoke the following command with a valid 
//   Introspection XML file and a writable output directory:
//     AllJoynCodeGenerator -i <INPUT XML FILE> -o <OUTPUT DIRECTORY>
// </auto-generated>
//-----------------------------------------------------------------------------
#include "pch.h"

using namespace Microsoft::WRL;
using namespace Platform;
using namespace Windows::Foundation;
using namespace Windows::Foundation::Collections;
using namespace Windows::Devices::AllJoyn;
using namespace org::alljoyn::ControlPanel::Humidifier;

// Note: Unlike an Interface implementation, which provides a single handler for each member, the event
// model allows for 0 or more listeners to be registered. The EventAdapter implementation deals with this
// difference by implementing a last-writer-wins policy. The lack of any return value (i.e., 0 listeners)
// is handled by returning a null result.

// Methods
IAsyncOperation<HumidifierPowerONResult^>^ HumidifierServiceEventAdapter::PowerONAsync(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new HumidifierPowerONCalledEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        PowerONCalled(this, args);
    });
    return HumidifierPowerONCalledEventArgs::GetResultAsync(args);
}

IAsyncOperation<HumidifierPowerOFFResult^>^ HumidifierServiceEventAdapter::PowerOFFAsync(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new HumidifierPowerOFFCalledEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        PowerOFFCalled(this, args);
    });
    return HumidifierPowerOFFCalledEventArgs::GetResultAsync(args);
}

IAsyncOperation<HumidifierSendSoftwareUpgradeFileResult^>^ HumidifierServiceEventAdapter::SendSoftwareUpgradeFileAsync(_In_ AllJoynMessageInfo^ info, _In_ uint32 interfaceMemberCurrentIndex, _In_ Windows::Foundation::Collections::IVectorView<byte>^ interfaceMemberFileData)
{
    auto args = ref new HumidifierSendSoftwareUpgradeFileCalledEventArgs(info, interfaceMemberCurrentIndex, interfaceMemberFileData);
    AllJoynHelpers::DispatchEvent([=]() {
        SendSoftwareUpgradeFileCalled(this, args);
    });
    return HumidifierSendSoftwareUpgradeFileCalledEventArgs::GetResultAsync(args);
}

// Property Reads
IAsyncOperation<HumidifierGetPowerStatusResult^>^ HumidifierServiceEventAdapter::GetPowerStatusAsync(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new HumidifierGetPowerStatusRequestedEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        GetPowerStatusRequested(this, args);
    });
    return HumidifierGetPowerStatusRequestedEventArgs::GetResultAsync(args);
}

IAsyncOperation<HumidifierGetHumidityValueResult^>^ HumidifierServiceEventAdapter::GetHumidityValueAsync(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new HumidifierGetHumidityValueRequestedEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        GetHumidityValueRequested(this, args);
    });
    return HumidifierGetHumidityValueRequestedEventArgs::GetResultAsync(args);
}

IAsyncOperation<HumidifierGetIonStatusResult^>^ HumidifierServiceEventAdapter::GetIonStatusAsync(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new HumidifierGetIonStatusRequestedEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        GetIonStatusRequested(this, args);
    });
    return HumidifierGetIonStatusRequestedEventArgs::GetResultAsync(args);
}

IAsyncOperation<HumidifierGetWarmMistStatusResult^>^ HumidifierServiceEventAdapter::GetWarmMistStatusAsync(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new HumidifierGetWarmMistStatusRequestedEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        GetWarmMistStatusRequested(this, args);
    });
    return HumidifierGetWarmMistStatusRequestedEventArgs::GetResultAsync(args);
}

IAsyncOperation<HumidifierGetMistVolumeValueResult^>^ HumidifierServiceEventAdapter::GetMistVolumeValueAsync(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new HumidifierGetMistVolumeValueRequestedEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        GetMistVolumeValueRequested(this, args);
    });
    return HumidifierGetMistVolumeValueRequestedEventArgs::GetResultAsync(args);
}

IAsyncOperation<HumidifierGetTimerValueResult^>^ HumidifierServiceEventAdapter::GetTimerValueAsync(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new HumidifierGetTimerValueRequestedEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        GetTimerValueRequested(this, args);
    });
    return HumidifierGetTimerValueRequestedEventArgs::GetResultAsync(args);
}

IAsyncOperation<HumidifierGetCurrentRoomTempValueResult^>^ HumidifierServiceEventAdapter::GetCurrentRoomTempValueAsync(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new HumidifierGetCurrentRoomTempValueRequestedEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        GetCurrentRoomTempValueRequested(this, args);
    });
    return HumidifierGetCurrentRoomTempValueRequestedEventArgs::GetResultAsync(args);
}

IAsyncOperation<HumidifierGetCurrentRoomHumidityValueResult^>^ HumidifierServiceEventAdapter::GetCurrentRoomHumidityValueAsync(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new HumidifierGetCurrentRoomHumidityValueRequestedEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        GetCurrentRoomHumidityValueRequested(this, args);
    });
    return HumidifierGetCurrentRoomHumidityValueRequestedEventArgs::GetResultAsync(args);
}

IAsyncOperation<HumidifierGetWaterTankStatusResult^>^ HumidifierServiceEventAdapter::GetWaterTankStatusAsync(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new HumidifierGetWaterTankStatusRequestedEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        GetWaterTankStatusRequested(this, args);
    });
    return HumidifierGetWaterTankStatusRequestedEventArgs::GetResultAsync(args);
}

// Property Writes
IAsyncOperation<HumidifierSetPowerStatusResult^>^ HumidifierServiceEventAdapter::SetPowerStatusAsync(_In_ AllJoynMessageInfo^ info, _In_ int32 value)
{
    auto args = ref new HumidifierSetPowerStatusRequestedEventArgs(info, value);
    AllJoynHelpers::DispatchEvent([=]() {
        SetPowerStatusRequested(this, args);
    });
    return HumidifierSetPowerStatusRequestedEventArgs::GetResultAsync(args);
}

IAsyncOperation<HumidifierSetHumidityValueResult^>^ HumidifierServiceEventAdapter::SetHumidityValueAsync(_In_ AllJoynMessageInfo^ info, _In_ int32 value)
{
    auto args = ref new HumidifierSetHumidityValueRequestedEventArgs(info, value);
    AllJoynHelpers::DispatchEvent([=]() {
        SetHumidityValueRequested(this, args);
    });
    return HumidifierSetHumidityValueRequestedEventArgs::GetResultAsync(args);
}

IAsyncOperation<HumidifierSetIonStatusResult^>^ HumidifierServiceEventAdapter::SetIonStatusAsync(_In_ AllJoynMessageInfo^ info, _In_ int32 value)
{
    auto args = ref new HumidifierSetIonStatusRequestedEventArgs(info, value);
    AllJoynHelpers::DispatchEvent([=]() {
        SetIonStatusRequested(this, args);
    });
    return HumidifierSetIonStatusRequestedEventArgs::GetResultAsync(args);
}

IAsyncOperation<HumidifierSetWarmMistStatusResult^>^ HumidifierServiceEventAdapter::SetWarmMistStatusAsync(_In_ AllJoynMessageInfo^ info, _In_ int32 value)
{
    auto args = ref new HumidifierSetWarmMistStatusRequestedEventArgs(info, value);
    AllJoynHelpers::DispatchEvent([=]() {
        SetWarmMistStatusRequested(this, args);
    });
    return HumidifierSetWarmMistStatusRequestedEventArgs::GetResultAsync(args);
}

IAsyncOperation<HumidifierSetMistVolumeValueResult^>^ HumidifierServiceEventAdapter::SetMistVolumeValueAsync(_In_ AllJoynMessageInfo^ info, _In_ int32 value)
{
    auto args = ref new HumidifierSetMistVolumeValueRequestedEventArgs(info, value);
    AllJoynHelpers::DispatchEvent([=]() {
        SetMistVolumeValueRequested(this, args);
    });
    return HumidifierSetMistVolumeValueRequestedEventArgs::GetResultAsync(args);
}

IAsyncOperation<HumidifierSetTimerValueResult^>^ HumidifierServiceEventAdapter::SetTimerValueAsync(_In_ AllJoynMessageInfo^ info, _In_ int32 value)
{
    auto args = ref new HumidifierSetTimerValueRequestedEventArgs(info, value);
    AllJoynHelpers::DispatchEvent([=]() {
        SetTimerValueRequested(this, args);
    });
    return HumidifierSetTimerValueRequestedEventArgs::GetResultAsync(args);
}

