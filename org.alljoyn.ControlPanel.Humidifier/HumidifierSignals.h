//-----------------------------------------------------------------------------
// <auto-generated> 
//   This code was generated by a tool. 
// 
//   Changes to this file may cause incorrect behavior and will be lost if  
//   the code is regenerated.
//
//   Tool: AllJoynCodeGenerator.exe
//
//   This tool is located in the Windows 10 SDK and the Windows 10 AllJoyn 
//   Visual Studio Extension in the Visual Studio Gallery.  
//
//   The generated code should be packaged in a Windows 10 C++/CX Runtime  
//   Component which can be consumed in any UWP-supported language using 
//   APIs that are available in Windows.Devices.AllJoyn.
//
//   Using AllJoynCodeGenerator - Invoke the following command with a valid 
//   Introspection XML file and a writable output directory:
//     AllJoynCodeGenerator -i <INPUT XML FILE> -o <OUTPUT DIRECTORY>
// </auto-generated>
//-----------------------------------------------------------------------------
#pragma once

namespace org { namespace alljoyn { namespace ControlPanel { namespace Humidifier {

ref class HumidifierSignals;

public interface class IHumidifierSignals
{
    event Windows::Foundation::TypedEventHandler<HumidifierSignals^, HumidifierCurrentRoomTempValueChangedReceivedEventArgs^>^ CurrentRoomTempValueChangedReceived;
    event Windows::Foundation::TypedEventHandler<HumidifierSignals^, HumidifierCurrentRoomHumidityValueChangedReceivedEventArgs^>^ CurrentRoomHumidityValueChangedReceived;
    event Windows::Foundation::TypedEventHandler<HumidifierSignals^, HumidifierWaterTankStatusChangedReceivedEventArgs^>^ WaterTankStatusChangedReceived;
    event Windows::Foundation::TypedEventHandler<HumidifierSignals^, HumidifierPowerStatusChangedReceivedEventArgs^>^ PowerStatusChangedReceived;
    event Windows::Foundation::TypedEventHandler<HumidifierSignals^, HumidifierHumidityValueChangedReceivedEventArgs^>^ HumidityValueChangedReceived;
    event Windows::Foundation::TypedEventHandler<HumidifierSignals^, HumidifierIonStatusChangedReceivedEventArgs^>^ IonStatusChangedReceived;
    event Windows::Foundation::TypedEventHandler<HumidifierSignals^, HumidifierWarmMistStatusChangedReceivedEventArgs^>^ WarmMistStatusChangedReceived;
    event Windows::Foundation::TypedEventHandler<HumidifierSignals^, HumidifierMistVolumeValueChangedReceivedEventArgs^>^ MistVolumeValueChangedReceived;
    event Windows::Foundation::TypedEventHandler<HumidifierSignals^, HumidifierTimerValueChangedReceivedEventArgs^>^ TimerValueChangedReceived;
};

public ref class HumidifierSignals sealed : [Windows::Foundation::Metadata::Default] IHumidifierSignals
{
public:
    // Calling this method will send the currentRoomTempValueChanged signal to every member of the session.
    void CurrentRoomTempValueChanged(_In_ int32 interfaceMemberNewCurrentRoomTempValue);

    // This event fires whenever the currentRoomTempValueChanged signal is sent by another member of the session.
    virtual event Windows::Foundation::TypedEventHandler<HumidifierSignals^, HumidifierCurrentRoomTempValueChangedReceivedEventArgs^>^ CurrentRoomTempValueChangedReceived;

    // Calling this method will send the currentRoomHumidityValueChanged signal to every member of the session.
    void CurrentRoomHumidityValueChanged(_In_ int32 interfaceMemberNewCurrentRoomHumidityValue);

    // This event fires whenever the currentRoomHumidityValueChanged signal is sent by another member of the session.
    virtual event Windows::Foundation::TypedEventHandler<HumidifierSignals^, HumidifierCurrentRoomHumidityValueChangedReceivedEventArgs^>^ CurrentRoomHumidityValueChangedReceived;

    // Calling this method will send the waterTankStatusChanged signal to every member of the session.
    void WaterTankStatusChanged(_In_ int32 interfaceMemberNewWaterTankStatus);

    // This event fires whenever the waterTankStatusChanged signal is sent by another member of the session.
    virtual event Windows::Foundation::TypedEventHandler<HumidifierSignals^, HumidifierWaterTankStatusChangedReceivedEventArgs^>^ WaterTankStatusChangedReceived;

    // Calling this method will send the powerStatusChanged signal to every member of the session.
    void PowerStatusChanged(_In_ int32 interfaceMemberNewPowerStatus);

    // This event fires whenever the powerStatusChanged signal is sent by another member of the session.
    virtual event Windows::Foundation::TypedEventHandler<HumidifierSignals^, HumidifierPowerStatusChangedReceivedEventArgs^>^ PowerStatusChangedReceived;

    // Calling this method will send the humidityValueChanged signal to every member of the session.
    void HumidityValueChanged(_In_ int32 interfaceMemberNewHumidityValue);

    // This event fires whenever the humidityValueChanged signal is sent by another member of the session.
    virtual event Windows::Foundation::TypedEventHandler<HumidifierSignals^, HumidifierHumidityValueChangedReceivedEventArgs^>^ HumidityValueChangedReceived;

    // Calling this method will send the ionStatusChanged signal to every member of the session.
    void IonStatusChanged(_In_ int32 interfaceMemberNewIonStatus);

    // This event fires whenever the ionStatusChanged signal is sent by another member of the session.
    virtual event Windows::Foundation::TypedEventHandler<HumidifierSignals^, HumidifierIonStatusChangedReceivedEventArgs^>^ IonStatusChangedReceived;

    // Calling this method will send the warmMistStatusChanged signal to every member of the session.
    void WarmMistStatusChanged(_In_ int32 interfaceMemberNewWarmMistStatus);

    // This event fires whenever the warmMistStatusChanged signal is sent by another member of the session.
    virtual event Windows::Foundation::TypedEventHandler<HumidifierSignals^, HumidifierWarmMistStatusChangedReceivedEventArgs^>^ WarmMistStatusChangedReceived;

    // Calling this method will send the mistVolumeValueChanged signal to every member of the session.
    void MistVolumeValueChanged(_In_ int32 interfaceMemberNewMistVolumeValue);

    // This event fires whenever the mistVolumeValueChanged signal is sent by another member of the session.
    virtual event Windows::Foundation::TypedEventHandler<HumidifierSignals^, HumidifierMistVolumeValueChangedReceivedEventArgs^>^ MistVolumeValueChangedReceived;

    // Calling this method will send the timerValueChanged signal to every member of the session.
    void TimerValueChanged(_In_ int32 interfaceMemberNewTimerValue);

    // This event fires whenever the timerValueChanged signal is sent by another member of the session.
    virtual event Windows::Foundation::TypedEventHandler<HumidifierSignals^, HumidifierTimerValueChangedReceivedEventArgs^>^ TimerValueChangedReceived;

internal:
    void Initialize(_In_ alljoyn_busobject busObject, _In_ alljoyn_sessionid sessionId);
    void CallCurrentRoomTempValueChangedReceived(_In_ HumidifierSignals^ sender, _In_ HumidifierCurrentRoomTempValueChangedReceivedEventArgs^ args);
    void CallCurrentRoomHumidityValueChangedReceived(_In_ HumidifierSignals^ sender, _In_ HumidifierCurrentRoomHumidityValueChangedReceivedEventArgs^ args);
    void CallWaterTankStatusChangedReceived(_In_ HumidifierSignals^ sender, _In_ HumidifierWaterTankStatusChangedReceivedEventArgs^ args);
    void CallPowerStatusChangedReceived(_In_ HumidifierSignals^ sender, _In_ HumidifierPowerStatusChangedReceivedEventArgs^ args);
    void CallHumidityValueChangedReceived(_In_ HumidifierSignals^ sender, _In_ HumidifierHumidityValueChangedReceivedEventArgs^ args);
    void CallIonStatusChangedReceived(_In_ HumidifierSignals^ sender, _In_ HumidifierIonStatusChangedReceivedEventArgs^ args);
    void CallWarmMistStatusChangedReceived(_In_ HumidifierSignals^ sender, _In_ HumidifierWarmMistStatusChangedReceivedEventArgs^ args);
    void CallMistVolumeValueChangedReceived(_In_ HumidifierSignals^ sender, _In_ HumidifierMistVolumeValueChangedReceivedEventArgs^ args);
    void CallTimerValueChangedReceived(_In_ HumidifierSignals^ sender, _In_ HumidifierTimerValueChangedReceivedEventArgs^ args);

private:
    alljoyn_busobject m_busObject;
    alljoyn_sessionid m_sessionId;

    alljoyn_interfacedescription_member m_memberCurrentRoomTempValueChanged;
    alljoyn_interfacedescription_member m_memberCurrentRoomHumidityValueChanged;
    alljoyn_interfacedescription_member m_memberWaterTankStatusChanged;
    alljoyn_interfacedescription_member m_memberPowerStatusChanged;
    alljoyn_interfacedescription_member m_memberHumidityValueChanged;
    alljoyn_interfacedescription_member m_memberIonStatusChanged;
    alljoyn_interfacedescription_member m_memberWarmMistStatusChanged;
    alljoyn_interfacedescription_member m_memberMistVolumeValueChanged;
    alljoyn_interfacedescription_member m_memberTimerValueChanged;
};

} } } } 
