//-----------------------------------------------------------------------------
// <auto-generated> 
//   This code was generated by a tool. 
// 
//   Changes to this file may cause incorrect behavior and will be lost if  
//   the code is regenerated.
//
//   Tool: AllJoynCodeGenerator.exe
//
//   This tool is located in the Windows 10 SDK and the Windows 10 AllJoyn 
//   Visual Studio Extension in the Visual Studio Gallery.  
//
//   The generated code should be packaged in a Windows 10 C++/CX Runtime  
//   Component which can be consumed in any UWP-supported language using 
//   APIs that are available in Windows.Devices.AllJoyn.
//
//   Using AllJoynCodeGenerator - Invoke the following command with a valid 
//   Introspection XML file and a writable output directory:
//     AllJoynCodeGenerator -i <INPUT XML FILE> -o <OUTPUT DIRECTORY>
// </auto-generated>
//-----------------------------------------------------------------------------
#pragma once

namespace org { namespace alljoyn { namespace ControlPanel { namespace AirPurifier {

ref class AirPurifierSignals;

public interface class IAirPurifierSignals
{
    event Windows::Foundation::TypedEventHandler<AirPurifierSignals^, AirPurifierSensorOdorValueChangedReceivedEventArgs^>^ SensorOdorValueChangedReceived;
    event Windows::Foundation::TypedEventHandler<AirPurifierSignals^, AirPurifierSensorDustValueChangedReceivedEventArgs^>^ SensorDustValueChangedReceived;
    event Windows::Foundation::TypedEventHandler<AirPurifierSignals^, AirPurifierSensorAllergenValueChangedReceivedEventArgs^>^ SensorAllergenValueChangedReceived;
    event Windows::Foundation::TypedEventHandler<AirPurifierSignals^, AirPurifierSensorCleanMetalGridValueChangedReceivedEventArgs^>^ SensorCleanMetalGridValueChangedReceived;
    event Windows::Foundation::TypedEventHandler<AirPurifierSignals^, AirPurifierSensorReplaceFilterValueChangedReceivedEventArgs^>^ SensorReplaceFilterValueChangedReceived;
    event Windows::Foundation::TypedEventHandler<AirPurifierSignals^, AirPurifierSensorCleanMonitorValueChangedReceivedEventArgs^>^ SensorCleanMonitorValueChangedReceived;
    event Windows::Foundation::TypedEventHandler<AirPurifierSignals^, AirPurifierPowerStatusChangedReceivedEventArgs^>^ PowerStatusChangedReceived;
    event Windows::Foundation::TypedEventHandler<AirPurifierSignals^, AirPurifierSensorsCleanMetalGridAndReplaceFilterValuesResetReceivedEventArgs^>^ SensorsCleanMetalGridAndReplaceFilterValuesResetReceived;
    event Windows::Foundation::TypedEventHandler<AirPurifierSignals^, AirPurifierFlowValueChangedReceivedEventArgs^>^ FlowValueChangedReceived;
    event Windows::Foundation::TypedEventHandler<AirPurifierSignals^, AirPurifierTimerValueChangedReceivedEventArgs^>^ TimerValueChangedReceived;
};

public ref class AirPurifierSignals sealed : [Windows::Foundation::Metadata::Default] IAirPurifierSignals
{
public:
    // Calling this method will send the sensorOdorValueChanged signal to every member of the session.
    void SensorOdorValueChanged(_In_ int32 interfaceMemberNewSensorOdorValue);

    // This event fires whenever the sensorOdorValueChanged signal is sent by another member of the session.
    virtual event Windows::Foundation::TypedEventHandler<AirPurifierSignals^, AirPurifierSensorOdorValueChangedReceivedEventArgs^>^ SensorOdorValueChangedReceived;

    // Calling this method will send the sensorDustValueChanged signal to every member of the session.
    void SensorDustValueChanged(_In_ int32 interfaceMemberNewSensorDustValue);

    // This event fires whenever the sensorDustValueChanged signal is sent by another member of the session.
    virtual event Windows::Foundation::TypedEventHandler<AirPurifierSignals^, AirPurifierSensorDustValueChangedReceivedEventArgs^>^ SensorDustValueChangedReceived;

    // Calling this method will send the sensorAllergenValueChanged signal to every member of the session.
    void SensorAllergenValueChanged(_In_ int32 interfaceMemberNewSensorAllergenValue);

    // This event fires whenever the sensorAllergenValueChanged signal is sent by another member of the session.
    virtual event Windows::Foundation::TypedEventHandler<AirPurifierSignals^, AirPurifierSensorAllergenValueChangedReceivedEventArgs^>^ SensorAllergenValueChangedReceived;

    // Calling this method will send the sensorCleanMetalGridValueChanged signal to every member of the session.
    void SensorCleanMetalGridValueChanged(_In_ int32 interfaceMemberNewSensorCleanMetalGridValue);

    // This event fires whenever the sensorCleanMetalGridValueChanged signal is sent by another member of the session.
    virtual event Windows::Foundation::TypedEventHandler<AirPurifierSignals^, AirPurifierSensorCleanMetalGridValueChangedReceivedEventArgs^>^ SensorCleanMetalGridValueChangedReceived;

    // Calling this method will send the sensorReplaceFilterValueChanged signal to every member of the session.
    void SensorReplaceFilterValueChanged(_In_ int32 interfaceMemberNewSensorReplaceFilterValue);

    // This event fires whenever the sensorReplaceFilterValueChanged signal is sent by another member of the session.
    virtual event Windows::Foundation::TypedEventHandler<AirPurifierSignals^, AirPurifierSensorReplaceFilterValueChangedReceivedEventArgs^>^ SensorReplaceFilterValueChangedReceived;

    // Calling this method will send the sensorCleanMonitorValueChanged signal to every member of the session.
    void SensorCleanMonitorValueChanged(_In_ int32 interfaceMemberNewSensorCleanMonitorValue);

    // This event fires whenever the sensorCleanMonitorValueChanged signal is sent by another member of the session.
    virtual event Windows::Foundation::TypedEventHandler<AirPurifierSignals^, AirPurifierSensorCleanMonitorValueChangedReceivedEventArgs^>^ SensorCleanMonitorValueChangedReceived;

    // Calling this method will send the powerStatusChanged signal to every member of the session.
    void PowerStatusChanged(_In_ int32 interfaceMemberNewPowerStatus);

    // This event fires whenever the powerStatusChanged signal is sent by another member of the session.
    virtual event Windows::Foundation::TypedEventHandler<AirPurifierSignals^, AirPurifierPowerStatusChangedReceivedEventArgs^>^ PowerStatusChangedReceived;

    // Calling this method will send the sensorsCleanMetalGridAndReplaceFilterValuesReset signal to every member of the session.
    void SensorsCleanMetalGridAndReplaceFilterValuesReset();

    // This event fires whenever the sensorsCleanMetalGridAndReplaceFilterValuesReset signal is sent by another member of the session.
    virtual event Windows::Foundation::TypedEventHandler<AirPurifierSignals^, AirPurifierSensorsCleanMetalGridAndReplaceFilterValuesResetReceivedEventArgs^>^ SensorsCleanMetalGridAndReplaceFilterValuesResetReceived;

    // Calling this method will send the flowValueChanged signal to every member of the session.
    void FlowValueChanged(_In_ int32 interfaceMemberNewFlowValue);

    // This event fires whenever the flowValueChanged signal is sent by another member of the session.
    virtual event Windows::Foundation::TypedEventHandler<AirPurifierSignals^, AirPurifierFlowValueChangedReceivedEventArgs^>^ FlowValueChangedReceived;

    // Calling this method will send the timerValueChanged signal to every member of the session.
    void TimerValueChanged(_In_ int32 interfaceMemberNewTimerValue);

    // This event fires whenever the timerValueChanged signal is sent by another member of the session.
    virtual event Windows::Foundation::TypedEventHandler<AirPurifierSignals^, AirPurifierTimerValueChangedReceivedEventArgs^>^ TimerValueChangedReceived;

internal:
    void Initialize(_In_ alljoyn_busobject busObject, _In_ alljoyn_sessionid sessionId);
    void CallSensorOdorValueChangedReceived(_In_ AirPurifierSignals^ sender, _In_ AirPurifierSensorOdorValueChangedReceivedEventArgs^ args);
    void CallSensorDustValueChangedReceived(_In_ AirPurifierSignals^ sender, _In_ AirPurifierSensorDustValueChangedReceivedEventArgs^ args);
    void CallSensorAllergenValueChangedReceived(_In_ AirPurifierSignals^ sender, _In_ AirPurifierSensorAllergenValueChangedReceivedEventArgs^ args);
    void CallSensorCleanMetalGridValueChangedReceived(_In_ AirPurifierSignals^ sender, _In_ AirPurifierSensorCleanMetalGridValueChangedReceivedEventArgs^ args);
    void CallSensorReplaceFilterValueChangedReceived(_In_ AirPurifierSignals^ sender, _In_ AirPurifierSensorReplaceFilterValueChangedReceivedEventArgs^ args);
    void CallSensorCleanMonitorValueChangedReceived(_In_ AirPurifierSignals^ sender, _In_ AirPurifierSensorCleanMonitorValueChangedReceivedEventArgs^ args);
    void CallPowerStatusChangedReceived(_In_ AirPurifierSignals^ sender, _In_ AirPurifierPowerStatusChangedReceivedEventArgs^ args);
    void CallSensorsCleanMetalGridAndReplaceFilterValuesResetReceived(_In_ AirPurifierSignals^ sender, _In_ AirPurifierSensorsCleanMetalGridAndReplaceFilterValuesResetReceivedEventArgs^ args);
    void CallFlowValueChangedReceived(_In_ AirPurifierSignals^ sender, _In_ AirPurifierFlowValueChangedReceivedEventArgs^ args);
    void CallTimerValueChangedReceived(_In_ AirPurifierSignals^ sender, _In_ AirPurifierTimerValueChangedReceivedEventArgs^ args);

private:
    alljoyn_busobject m_busObject;
    alljoyn_sessionid m_sessionId;

    alljoyn_interfacedescription_member m_memberSensorOdorValueChanged;
    alljoyn_interfacedescription_member m_memberSensorDustValueChanged;
    alljoyn_interfacedescription_member m_memberSensorAllergenValueChanged;
    alljoyn_interfacedescription_member m_memberSensorCleanMetalGridValueChanged;
    alljoyn_interfacedescription_member m_memberSensorReplaceFilterValueChanged;
    alljoyn_interfacedescription_member m_memberSensorCleanMonitorValueChanged;
    alljoyn_interfacedescription_member m_memberPowerStatusChanged;
    alljoyn_interfacedescription_member m_memberSensorsCleanMetalGridAndReplaceFilterValuesReset;
    alljoyn_interfacedescription_member m_memberFlowValueChanged;
    alljoyn_interfacedescription_member m_memberTimerValueChanged;
};

} } } } 
