//-----------------------------------------------------------------------------
// <auto-generated> 
//   This code was generated by a tool. 
// 
//   Changes to this file may cause incorrect behavior and will be lost if  
//   the code is regenerated.
//
//   Tool: AllJoynCodeGenerator.exe
//
//   This tool is located in the Windows 10 SDK and the Windows 10 AllJoyn 
//   Visual Studio Extension in the Visual Studio Gallery.  
//
//   The generated code should be packaged in a Windows 10 C++/CX Runtime  
//   Component which can be consumed in any UWP-supported language using 
//   APIs that are available in Windows.Devices.AllJoyn.
//
//   Using AllJoynCodeGenerator - Invoke the following command with a valid 
//   Introspection XML file and a writable output directory:
//     AllJoynCodeGenerator -i <INPUT XML FILE> -o <OUTPUT DIRECTORY>
// </auto-generated>
//-----------------------------------------------------------------------------
#include "pch.h"

using namespace Microsoft::WRL;
using namespace Platform;
using namespace Windows::Foundation;
using namespace Windows::Foundation::Collections;
using namespace Windows::Devices::AllJoyn;
using namespace org::alljoyn::Humidifier::Actions;

// Note: Unlike an Interface implementation, which provides a single handler for each member, the event
// model allows for 0 or more listeners to be registered. The EventAdapter implementation deals with this
// difference by implementing a last-writer-wins policy. The lack of any return value (i.e., 0 listeners)
// is handled by returning a null result.

// Methods
IAsyncOperation<ActionsSetPowerToOffResult^>^ ActionsServiceEventAdapter::SetPowerToOffAsync(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new ActionsSetPowerToOffCalledEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        SetPowerToOffCalled(this, args);
    });
    return ActionsSetPowerToOffCalledEventArgs::GetResultAsync(args);
}

IAsyncOperation<ActionsSetPowerToOnResult^>^ ActionsServiceEventAdapter::SetPowerToOnAsync(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new ActionsSetPowerToOnCalledEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        SetPowerToOnCalled(this, args);
    });
    return ActionsSetPowerToOnCalledEventArgs::GetResultAsync(args);
}

IAsyncOperation<ActionsSetHumidityTo40Result^>^ ActionsServiceEventAdapter::SetHumidityTo40Async(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new ActionsSetHumidityTo40CalledEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        SetHumidityTo40Called(this, args);
    });
    return ActionsSetHumidityTo40CalledEventArgs::GetResultAsync(args);
}

IAsyncOperation<ActionsSetHumidityTo45Result^>^ ActionsServiceEventAdapter::SetHumidityTo45Async(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new ActionsSetHumidityTo45CalledEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        SetHumidityTo45Called(this, args);
    });
    return ActionsSetHumidityTo45CalledEventArgs::GetResultAsync(args);
}

IAsyncOperation<ActionsSetHumidityTo50Result^>^ ActionsServiceEventAdapter::SetHumidityTo50Async(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new ActionsSetHumidityTo50CalledEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        SetHumidityTo50Called(this, args);
    });
    return ActionsSetHumidityTo50CalledEventArgs::GetResultAsync(args);
}

IAsyncOperation<ActionsSetHumidityTo55Result^>^ ActionsServiceEventAdapter::SetHumidityTo55Async(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new ActionsSetHumidityTo55CalledEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        SetHumidityTo55Called(this, args);
    });
    return ActionsSetHumidityTo55CalledEventArgs::GetResultAsync(args);
}

IAsyncOperation<ActionsSetHumidityTo60Result^>^ ActionsServiceEventAdapter::SetHumidityTo60Async(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new ActionsSetHumidityTo60CalledEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        SetHumidityTo60Called(this, args);
    });
    return ActionsSetHumidityTo60CalledEventArgs::GetResultAsync(args);
}

IAsyncOperation<ActionsSetHumidityTo65Result^>^ ActionsServiceEventAdapter::SetHumidityTo65Async(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new ActionsSetHumidityTo65CalledEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        SetHumidityTo65Called(this, args);
    });
    return ActionsSetHumidityTo65CalledEventArgs::GetResultAsync(args);
}

IAsyncOperation<ActionsSetHumidityTo70Result^>^ ActionsServiceEventAdapter::SetHumidityTo70Async(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new ActionsSetHumidityTo70CalledEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        SetHumidityTo70Called(this, args);
    });
    return ActionsSetHumidityTo70CalledEventArgs::GetResultAsync(args);
}

IAsyncOperation<ActionsSetHumidityTo75Result^>^ ActionsServiceEventAdapter::SetHumidityTo75Async(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new ActionsSetHumidityTo75CalledEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        SetHumidityTo75Called(this, args);
    });
    return ActionsSetHumidityTo75CalledEventArgs::GetResultAsync(args);
}

IAsyncOperation<ActionsSetHumidityTo80Result^>^ ActionsServiceEventAdapter::SetHumidityTo80Async(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new ActionsSetHumidityTo80CalledEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        SetHumidityTo80Called(this, args);
    });
    return ActionsSetHumidityTo80CalledEventArgs::GetResultAsync(args);
}

IAsyncOperation<ActionsSetWarmMistToOFFResult^>^ ActionsServiceEventAdapter::SetWarmMistToOFFAsync(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new ActionsSetWarmMistToOFFCalledEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        SetWarmMistToOFFCalled(this, args);
    });
    return ActionsSetWarmMistToOFFCalledEventArgs::GetResultAsync(args);
}

IAsyncOperation<ActionsSetWarmMistToLOWResult^>^ ActionsServiceEventAdapter::SetWarmMistToLOWAsync(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new ActionsSetWarmMistToLOWCalledEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        SetWarmMistToLOWCalled(this, args);
    });
    return ActionsSetWarmMistToLOWCalledEventArgs::GetResultAsync(args);
}

IAsyncOperation<ActionsSetWarmMistToHIResult^>^ ActionsServiceEventAdapter::SetWarmMistToHIAsync(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new ActionsSetWarmMistToHICalledEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        SetWarmMistToHICalled(this, args);
    });
    return ActionsSetWarmMistToHICalledEventArgs::GetResultAsync(args);
}

IAsyncOperation<ActionsSetMistVolumeToLOWResult^>^ ActionsServiceEventAdapter::SetMistVolumeToLOWAsync(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new ActionsSetMistVolumeToLOWCalledEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        SetMistVolumeToLOWCalled(this, args);
    });
    return ActionsSetMistVolumeToLOWCalledEventArgs::GetResultAsync(args);
}

IAsyncOperation<ActionsSetMistVolumeToMEDResult^>^ ActionsServiceEventAdapter::SetMistVolumeToMEDAsync(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new ActionsSetMistVolumeToMEDCalledEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        SetMistVolumeToMEDCalled(this, args);
    });
    return ActionsSetMistVolumeToMEDCalledEventArgs::GetResultAsync(args);
}

IAsyncOperation<ActionsSetMistVolumeToHIResult^>^ ActionsServiceEventAdapter::SetMistVolumeToHIAsync(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new ActionsSetMistVolumeToHICalledEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        SetMistVolumeToHICalled(this, args);
    });
    return ActionsSetMistVolumeToHICalledEventArgs::GetResultAsync(args);
}

// Property Reads
IAsyncOperation<ActionsGetVersionResult^>^ ActionsServiceEventAdapter::GetVersionAsync(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new ActionsGetVersionRequestedEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        GetVersionRequested(this, args);
    });
    return ActionsGetVersionRequestedEventArgs::GetResultAsync(args);
}

// Property Writes
