//-----------------------------------------------------------------------------
// <auto-generated> 
//   This code was generated by a tool. 
// 
//   Changes to this file may cause incorrect behavior and will be lost if  
//   the code is regenerated.
//
//   Tool: AllJoynCodeGenerator.exe
//
//   This tool is located in the Windows 10 SDK and the Windows 10 AllJoyn 
//   Visual Studio Extension in the Visual Studio Gallery.  
//
//   The generated code should be packaged in a Windows 10 C++/CX Runtime  
//   Component which can be consumed in any UWP-supported language using 
//   APIs that are available in Windows.Devices.AllJoyn.
//
//   Using AllJoynCodeGenerator - Invoke the following command with a valid 
//   Introspection XML file and a writable output directory:
//     AllJoynCodeGenerator -i <INPUT XML FILE> -o <OUTPUT DIRECTORY>
// </auto-generated>
//-----------------------------------------------------------------------------
#include "pch.h"

using namespace Microsoft::WRL;
using namespace Platform;
using namespace Windows::Foundation;
using namespace Windows::Foundation::Collections;
using namespace Windows::Devices::AllJoyn;
using namespace org::alljoyn::AirPurifier::Actions;

// Note: Unlike an Interface implementation, which provides a single handler for each member, the event
// model allows for 0 or more listeners to be registered. The EventAdapter implementation deals with this
// difference by implementing a last-writer-wins policy. The lack of any return value (i.e., 0 listeners)
// is handled by returning a null result.

// Methods
IAsyncOperation<ActionsSetPowerToOffResult^>^ ActionsServiceEventAdapter::SetPowerToOffAsync(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new ActionsSetPowerToOffCalledEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        SetPowerToOffCalled(this, args);
    });
    return ActionsSetPowerToOffCalledEventArgs::GetResultAsync(args);
}

IAsyncOperation<ActionsSetPowerToOnResult^>^ ActionsServiceEventAdapter::SetPowerToOnAsync(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new ActionsSetPowerToOnCalledEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        SetPowerToOnCalled(this, args);
    });
    return ActionsSetPowerToOnCalledEventArgs::GetResultAsync(args);
}

IAsyncOperation<ActionsSetFlowToHIResult^>^ ActionsServiceEventAdapter::SetFlowToHIAsync(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new ActionsSetFlowToHICalledEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        SetFlowToHICalled(this, args);
    });
    return ActionsSetFlowToHICalledEventArgs::GetResultAsync(args);
}

IAsyncOperation<ActionsSetFlowToMEDResult^>^ ActionsServiceEventAdapter::SetFlowToMEDAsync(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new ActionsSetFlowToMEDCalledEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        SetFlowToMEDCalled(this, args);
    });
    return ActionsSetFlowToMEDCalledEventArgs::GetResultAsync(args);
}

IAsyncOperation<ActionsSetFlowToLOWResult^>^ ActionsServiceEventAdapter::SetFlowToLOWAsync(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new ActionsSetFlowToLOWCalledEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        SetFlowToLOWCalled(this, args);
    });
    return ActionsSetFlowToLOWCalledEventArgs::GetResultAsync(args);
}

IAsyncOperation<ActionsSetFlowToQUIETResult^>^ ActionsServiceEventAdapter::SetFlowToQUIETAsync(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new ActionsSetFlowToQUIETCalledEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        SetFlowToQUIETCalled(this, args);
    });
    return ActionsSetFlowToQUIETCalledEventArgs::GetResultAsync(args);
}

IAsyncOperation<ActionsSetFlowToAUTOResult^>^ ActionsServiceEventAdapter::SetFlowToAUTOAsync(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new ActionsSetFlowToAUTOCalledEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        SetFlowToAUTOCalled(this, args);
    });
    return ActionsSetFlowToAUTOCalledEventArgs::GetResultAsync(args);
}

IAsyncOperation<ActionsSetTimerTo8HResult^>^ ActionsServiceEventAdapter::SetTimerTo8HAsync(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new ActionsSetTimerTo8HCalledEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        SetTimerTo8HCalled(this, args);
    });
    return ActionsSetTimerTo8HCalledEventArgs::GetResultAsync(args);
}

IAsyncOperation<ActionsSetTimerTo2HResult^>^ ActionsServiceEventAdapter::SetTimerTo2HAsync(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new ActionsSetTimerTo2HCalledEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        SetTimerTo2HCalled(this, args);
    });
    return ActionsSetTimerTo2HCalledEventArgs::GetResultAsync(args);
}

IAsyncOperation<ActionsSetTimerTo1HResult^>^ ActionsServiceEventAdapter::SetTimerTo1HAsync(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new ActionsSetTimerTo1HCalledEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        SetTimerTo1HCalled(this, args);
    });
    return ActionsSetTimerTo1HCalledEventArgs::GetResultAsync(args);
}

IAsyncOperation<ActionsSetTimerToOffResult^>^ ActionsServiceEventAdapter::SetTimerToOffAsync(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new ActionsSetTimerToOffCalledEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        SetTimerToOffCalled(this, args);
    });
    return ActionsSetTimerToOffCalledEventArgs::GetResultAsync(args);
}

// Property Reads
IAsyncOperation<ActionsGetVersionResult^>^ ActionsServiceEventAdapter::GetVersionAsync(_In_ AllJoynMessageInfo^ info)
{
    auto args = ref new ActionsGetVersionRequestedEventArgs(info);
    AllJoynHelpers::DispatchEvent([=]() {
        GetVersionRequested(this, args);
    });
    return ActionsGetVersionRequestedEventArgs::GetResultAsync(args);
}

// Property Writes
